# Generated by Django 4.2.8 on 2024-01-19 12:21

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "department_name",
                    models.CharField(
                        blank=True, null=True, verbose_name="Department Name"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Designation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "designation_name",
                    models.CharField(
                        blank=True, null=True, verbose_name="Designation Name"
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="hrms_api.department",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="User Name"
                    ),
                ),
                ("country_code", models.IntegerField(blank=True, null=True)),
                (
                    "phone",
                    models.CharField(
                        max_length=17,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="phone number entered in format +910987654321 .",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                (
                    "dob",
                    models.DateField(blank=True, null=True, verbose_name="Birth Date"),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=400, verbose_name="Address"
                    ),
                ),
                (
                    "nationality",
                    models.CharField(blank=True, verbose_name="Nationality"),
                ),
                (
                    "email",
                    models.EmailField(max_length=255, verbose_name="Email Address"),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("MALE", "MALE"), ("FEMALE", "FEMALE")],
                        default="",
                        verbose_name="Gender",
                    ),
                ),
                (
                    "report_to",
                    models.CharField(blank=True, null=True, verbose_name="Report to"),
                ),
                (
                    "is_admin",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="is admin"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="is staff"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="avatars",
                        verbose_name="Profile Image",
                    ),
                ),
                (
                    "date_joined",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date of Joining"
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="hrms_api.department",
                    ),
                ),
                (
                    "designation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="hrms_api.designation",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={"db_table": "Users",},
        ),
    ]
